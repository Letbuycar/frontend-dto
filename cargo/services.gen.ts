// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { ReadAuctionsApiV1AuctionsGetData, ReadAuctionsApiV1AuctionsGetError, ReadAuctionsApiV1AuctionsGetResponse, CreateNewAuctionApiV1AuctionsPostData, CreateNewAuctionApiV1AuctionsPostError, CreateNewAuctionApiV1AuctionsPostResponse, ReadAuctionApiV1AuctionsAuctionIdGetData, ReadAuctionApiV1AuctionsAuctionIdGetError, ReadAuctionApiV1AuctionsAuctionIdGetResponse, UpdateExistingAuctionApiV1AuctionsAuctionIdPutData, UpdateExistingAuctionApiV1AuctionsAuctionIdPutError, UpdateExistingAuctionApiV1AuctionsAuctionIdPutResponse, DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteData, DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteError, DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteResponse, ReadAuctionFeesApiV1AuctionFeesGetData, ReadAuctionFeesApiV1AuctionFeesGetError, ReadAuctionFeesApiV1AuctionFeesGetResponse, CreateNewAuctionfeeApiV1AuctionFeesPostData, CreateNewAuctionfeeApiV1AuctionFeesPostError, CreateNewAuctionfeeApiV1AuctionFeesPostResponse, ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetData, ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetError, ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetResponse, UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutData, UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutError, UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutResponse, DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteData, DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteError, DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteResponse, ReadBoatTypesApiV1BoatTypesGetData, ReadBoatTypesApiV1BoatTypesGetError, ReadBoatTypesApiV1BoatTypesGetResponse, CreateBoatTypeApiV1BoatTypesPostData, CreateBoatTypeApiV1BoatTypesPostError, CreateBoatTypeApiV1BoatTypesPostResponse, ReadBoatTypeApiV1BoatTypesBodyTypeIdGetData, ReadBoatTypeApiV1BoatTypesBodyTypeIdGetError, ReadBoatTypeApiV1BoatTypesBodyTypeIdGetResponse, UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutData, UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutError, UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutResponse, DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteData, DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteError, DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteResponse, ReadBodyTypesApiV1BodyTypesGetData, ReadBodyTypesApiV1BodyTypesGetError, ReadBodyTypesApiV1BodyTypesGetResponse, CreateBodyTypeApiV1BodyTypesPostData, CreateBodyTypeApiV1BodyTypesPostError, CreateBodyTypeApiV1BodyTypesPostResponse, ReadBodyTypeApiV1BodyTypesBodyTypeIdGetData, ReadBodyTypeApiV1BodyTypesBodyTypeIdGetError, ReadBodyTypeApiV1BodyTypesBodyTypeIdGetResponse, UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutData, UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutError, UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutResponse, DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteData, DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteError, DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteResponse, ReadCarBrandsApiV1CarBrandsGetData, ReadCarBrandsApiV1CarBrandsGetError, ReadCarBrandsApiV1CarBrandsGetResponse, CreateNewCarBrandApiV1CarBrandsPostData, CreateNewCarBrandApiV1CarBrandsPostError, CreateNewCarBrandApiV1CarBrandsPostResponse, ReadCarBrandApiV1CarBrandsCarBrandIdGetData, ReadCarBrandApiV1CarBrandsCarBrandIdGetError, ReadCarBrandApiV1CarBrandsCarBrandIdGetResponse, UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutData, UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutError, UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutResponse, DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteData, DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteError, DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteResponse, ReadCarModelsApiV1CarModelsGetData, ReadCarModelsApiV1CarModelsGetError, ReadCarModelsApiV1CarModelsGetResponse, CreateNewCarModelApiV1CarModelsPostData, CreateNewCarModelApiV1CarModelsPostError, CreateNewCarModelApiV1CarModelsPostResponse, ReadCarModelApiV1CarModelsCarModelIdGetData, ReadCarModelApiV1CarModelsCarModelIdGetError, ReadCarModelApiV1CarModelsCarModelIdGetResponse, UpdateExistingCarModelApiV1CarModelsCarModelIdPutData, UpdateExistingCarModelApiV1CarModelsCarModelIdPutError, UpdateExistingCarModelApiV1CarModelsCarModelIdPutResponse, DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteData, DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteError, DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteResponse, ReadEngineVolumesApiV1EngineVolumesGetData, ReadEngineVolumesApiV1EngineVolumesGetError, ReadEngineVolumesApiV1EngineVolumesGetResponse, CreateNewEngineVolumeApiV1EngineVolumesPostData, CreateNewEngineVolumeApiV1EngineVolumesPostError, CreateNewEngineVolumeApiV1EngineVolumesPostResponse, ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetData, ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetError, ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetResponse, UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutData, UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutError, UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutResponse, DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteData, DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteError, DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteResponse, ReadFuelTypesApiV1FuelTypesGetData, ReadFuelTypesApiV1FuelTypesGetError, ReadFuelTypesApiV1FuelTypesGetResponse, CreateFuelTypeApiV1FuelTypesPostData, CreateFuelTypeApiV1FuelTypesPostError, CreateFuelTypeApiV1FuelTypesPostResponse, ReadFuelTypeApiV1FuelTypesFuelTypeIdGetData, ReadFuelTypeApiV1FuelTypesFuelTypeIdGetError, ReadFuelTypeApiV1FuelTypesFuelTypeIdGetResponse, UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutData, UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutError, UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutResponse, DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteData, DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteError, DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteResponse, ReadTransmissionsApiV1TransmissionsTransmissionsGetData, ReadTransmissionsApiV1TransmissionsTransmissionsGetError, ReadTransmissionsApiV1TransmissionsTransmissionsGetResponse, ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetData, ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetError, ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetResponse, CreateTransmissionApiV1TransmissionsPostData, CreateTransmissionApiV1TransmissionsPostError, CreateTransmissionApiV1TransmissionsPostResponse, UpdateTransmissionApiV1TransmissionsTransmissionIdPutData, UpdateTransmissionApiV1TransmissionsTransmissionIdPutError, UpdateTransmissionApiV1TransmissionsTransmissionIdPutResponse, DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteData, DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteError, DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteResponse, ReadCitiesApiV1CitiesGetData, ReadCitiesApiV1CitiesGetError, ReadCitiesApiV1CitiesGetResponse, CreateCityApiV1CitiesPostData, CreateCityApiV1CitiesPostError, CreateCityApiV1CitiesPostResponse, ReadCityApiV1CitiesCityIdGetData, ReadCityApiV1CitiesCityIdGetError, ReadCityApiV1CitiesCityIdGetResponse, UpdateCityApiV1CitiesCityIdPutData, UpdateCityApiV1CitiesCityIdPutError, UpdateCityApiV1CitiesCityIdPutResponse, DeleteCityApiV1CitiesCityIdDeleteData, DeleteCityApiV1CitiesCityIdDeleteError, DeleteCityApiV1CitiesCityIdDeleteResponse, ReadCountriesApiV1CountriesGetData, ReadCountriesApiV1CountriesGetError, ReadCountriesApiV1CountriesGetResponse, CreateCountryApiV1CountriesPostData, CreateCountryApiV1CountriesPostError, CreateCountryApiV1CountriesPostResponse, ReadCountryApiV1CountriesCountryIdGetData, ReadCountryApiV1CountriesCountryIdGetError, ReadCountryApiV1CountriesCountryIdGetResponse, UpdateCountryApiV1CountriesCountryIdPutData, UpdateCountryApiV1CountriesCountryIdPutError, UpdateCountryApiV1CountriesCountryIdPutResponse, DeleteCountryApiV1CountriesCountryIdDeleteData, DeleteCountryApiV1CountriesCountryIdDeleteError, DeleteCountryApiV1CountriesCountryIdDeleteResponse, ReadLocationsFromApiV1LocationFromGetData, ReadLocationsFromApiV1LocationFromGetError, ReadLocationsFromApiV1LocationFromGetResponse, CreateLocationFromApiV1LocationFromPostData, CreateLocationFromApiV1LocationFromPostError, CreateLocationFromApiV1LocationFromPostResponse, ReadLocationFromApiV1LocationFromLocationFromIdGetData, ReadLocationFromApiV1LocationFromLocationFromIdGetError, ReadLocationFromApiV1LocationFromLocationFromIdGetResponse, UpdateLocationFromApiV1LocationFromLocationFromIdPutData, UpdateLocationFromApiV1LocationFromLocationFromIdPutError, UpdateLocationFromApiV1LocationFromLocationFromIdPutResponse, DeleteLocationFromApiV1LocationFromLocationFromIdDeleteData, DeleteLocationFromApiV1LocationFromLocationFromIdDeleteError, DeleteLocationFromApiV1LocationFromLocationFromIdDeleteResponse, ReadPortsFromApiV1PortFromGetData, ReadPortsFromApiV1PortFromGetError, ReadPortsFromApiV1PortFromGetResponse, CreateNewPortFromApiV1PortFromPostData, CreateNewPortFromApiV1PortFromPostError, CreateNewPortFromApiV1PortFromPostResponse, ReadPortFromApiV1PortFromPortFromIdGetData, ReadPortFromApiV1PortFromPortFromIdGetError, ReadPortFromApiV1PortFromPortFromIdGetResponse, UpdateExistingPortFromApiV1PortFromPortFromIdPutData, UpdateExistingPortFromApiV1PortFromPortFromIdPutError, UpdateExistingPortFromApiV1PortFromPortFromIdPutResponse, DeleteExistingPortFromApiV1PortFromPortFromIdDeleteData, DeleteExistingPortFromApiV1PortFromPortFromIdDeleteError, DeleteExistingPortFromApiV1PortFromPortFromIdDeleteResponse, ReadPortsToApiV1PortToGetData, ReadPortsToApiV1PortToGetError, ReadPortsToApiV1PortToGetResponse, CreatePortToApiV1PortToPostData, CreatePortToApiV1PortToPostError, CreatePortToApiV1PortToPostResponse, ReadPortToApiV1PortToPortToIdGetData, ReadPortToApiV1PortToPortToIdGetError, ReadPortToApiV1PortToPortToIdGetResponse, UpdatePortToApiV1PortToPortToIdPutData, UpdatePortToApiV1PortToPortToIdPutError, UpdatePortToApiV1PortToPortToIdPutResponse, DeletePortToApiV1PortToPortToIdDeleteData, DeletePortToApiV1PortToPortToIdDeleteError, DeletePortToApiV1PortToPortToIdDeleteResponse, ReadOverlandTariffsApiV1OverlandTariffGetData, ReadOverlandTariffsApiV1OverlandTariffGetError, ReadOverlandTariffsApiV1OverlandTariffGetResponse, CreateNewOverlandTariffApiV1OverlandTariffPostData, CreateNewOverlandTariffApiV1OverlandTariffPostError, CreateNewOverlandTariffApiV1OverlandTariffPostResponse, ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetData, ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetError, ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetResponse, UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutData, UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutError, UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutResponse, DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteData, DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteError, DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteResponse, ReadOverseaTariffsApiV1OverseaTariffGetData, ReadOverseaTariffsApiV1OverseaTariffGetError, ReadOverseaTariffsApiV1OverseaTariffGetResponse, CreateNewOverseaTariffApiV1OverseaTariffPostData, CreateNewOverseaTariffApiV1OverseaTariffPostError, CreateNewOverseaTariffApiV1OverseaTariffPostResponse, ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetData, ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetError, ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetResponse, UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutData, UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutError, UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutResponse, DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteData, DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteError, DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteResponse, GetDeliveryTariffsApiV1CalculateTariffDeliveryGetData, GetDeliveryTariffsApiV1CalculateTariffDeliveryGetError, GetDeliveryTariffsApiV1CalculateTariffDeliveryGetResponse, GetTotalTariffsApiV1CalculateTariffTotalGetData, GetTotalTariffsApiV1CalculateTariffTotalGetError, GetTotalTariffsApiV1CalculateTariffTotalGetResponse, ReadContainersApiV1ContainerGetData, ReadContainersApiV1ContainerGetError, ReadContainersApiV1ContainerGetResponse, CreateNewContainerApiV1ContainerPostData, CreateNewContainerApiV1ContainerPostError, CreateNewContainerApiV1ContainerPostResponse, ReadContainerApiV1ContainerContainerIdGetData, ReadContainerApiV1ContainerContainerIdGetError, ReadContainerApiV1ContainerContainerIdGetResponse, UpdateExistingContainerApiV1ContainerContainerIdPutData, UpdateExistingContainerApiV1ContainerContainerIdPutError, UpdateExistingContainerApiV1ContainerContainerIdPutResponse, DeleteExistingContainerApiV1ContainerContainerIdDeleteData, DeleteExistingContainerApiV1ContainerContainerIdDeleteError, DeleteExistingContainerApiV1ContainerContainerIdDeleteResponse, ReadCargoByVinApiV1CargoGeneralVinCargoVinGetData, ReadCargoByVinApiV1CargoGeneralVinCargoVinGetError, ReadCargoByVinApiV1CargoGeneralVinCargoVinGetResponse, ReadCargosAdminApiV1CargoAdminGetData, ReadCargosAdminApiV1CargoAdminGetError, ReadCargosAdminApiV1CargoAdminGetResponse, CreateNewCargoAdminApiV1CargoAdminPostData, CreateNewCargoAdminApiV1CargoAdminPostError, CreateNewCargoAdminApiV1CargoAdminPostResponse, ReadCargoAdminApiV1CargoAdminCargoIdGetData, ReadCargoAdminApiV1CargoAdminCargoIdGetError, ReadCargoAdminApiV1CargoAdminCargoIdGetResponse, UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutData, UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutError, UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutResponse, DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteData, DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteError, DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteResponse, ReadCargosManagerApiV1CargoManagerGetData, ReadCargosManagerApiV1CargoManagerGetError, ReadCargosManagerApiV1CargoManagerGetResponse, CreateNewCargoManagerApiV1CargoManagerPostData, CreateNewCargoManagerApiV1CargoManagerPostError, CreateNewCargoManagerApiV1CargoManagerPostResponse, ReadCargoManagerApiV1CargoManagerCargoIdGetData, ReadCargoManagerApiV1CargoManagerCargoIdGetError, ReadCargoManagerApiV1CargoManagerCargoIdGetResponse, UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutData, UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutError, UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutResponse, DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteData, DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteError, DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteResponse, ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetData, ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetError, ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetResponse, ReadCargosLogistApiV1CargoLogisticianGetData, ReadCargosLogistApiV1CargoLogisticianGetError, ReadCargosLogistApiV1CargoLogisticianGetResponse, ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetData, ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetError, ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetResponse, UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutData, UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutError, UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutResponse, ReadCargosAccountantApiV1CargoAccountantGetData, ReadCargosAccountantApiV1CargoAccountantGetError, ReadCargosAccountantApiV1CargoAccountantGetResponse, ReadCargoAccountantApiV1CargoAccountantCargoIdGetData, ReadCargoAccountantApiV1CargoAccountantCargoIdGetError, ReadCargoAccountantApiV1CargoAccountantCargoIdGetResponse, UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutData, UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutError, UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutResponse, ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetData, ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetError, ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetResponse, ReadCargosBrokerApiV1CargoBrokerGetData, ReadCargosBrokerApiV1CargoBrokerGetError, ReadCargosBrokerApiV1CargoBrokerGetResponse, ReadCargoBrokerApiV1CargoBrokerCargoIdGetData, ReadCargoBrokerApiV1CargoBrokerCargoIdGetError, ReadCargoBrokerApiV1CargoBrokerCargoIdGetResponse, UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutData, UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutError, UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutResponse, ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetData, ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetError, ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetResponse, ReadCargosDealerApiV1CargoDealerGetData, ReadCargosDealerApiV1CargoDealerGetError, ReadCargosDealerApiV1CargoDealerGetResponse, ReadCargoDealerApiV1CargoDealerCargoIdGetData, ReadCargoDealerApiV1CargoDealerCargoIdGetError, ReadCargoDealerApiV1CargoDealerCargoIdGetResponse, UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutData, UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutError, UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutResponse, ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetData, ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetError, ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetResponse, UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostData, UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostError, UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostResponse, UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutData, UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutError, UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutResponse, UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostData, UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostError, UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostResponse, UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetData, UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetError, UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetResponse, SendNotificaitonApiV1CargoRobotNotificationGetError, SendNotificaitonApiV1CargoRobotNotificationGetResponse, ReadCargosExpeditorApiV1CargoExpeditorGetData, ReadCargosExpeditorApiV1CargoExpeditorGetError, ReadCargosExpeditorApiV1CargoExpeditorGetResponse, ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetData, ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetError, ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetResponse, UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutData, UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutError, UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutResponse, ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetData, ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetError, ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Read Auctions
 */
export const readAuctionsApiV1AuctionsGet = <ThrowOnError extends boolean = false>(options?: Options<ReadAuctionsApiV1AuctionsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadAuctionsApiV1AuctionsGetResponse, ReadAuctionsApiV1AuctionsGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/auctions/'
    });
};

/**
 * Create New Auction
 */
export const createNewAuctionApiV1AuctionsPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewAuctionApiV1AuctionsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewAuctionApiV1AuctionsPostResponse, CreateNewAuctionApiV1AuctionsPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/auctions/'
    });
};

/**
 * Read Auction
 */
export const readAuctionApiV1AuctionsAuctionIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadAuctionApiV1AuctionsAuctionIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadAuctionApiV1AuctionsAuctionIdGetResponse, ReadAuctionApiV1AuctionsAuctionIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/auctions/{auction_id}/'
    });
};

/**
 * Update Existing Auction
 */
export const updateExistingAuctionApiV1AuctionsAuctionIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingAuctionApiV1AuctionsAuctionIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingAuctionApiV1AuctionsAuctionIdPutResponse, UpdateExistingAuctionApiV1AuctionsAuctionIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/auctions/{auction_id}/'
    });
};

/**
 * Delete Existing Auction
 */
export const deleteExistingAuctionApiV1AuctionsAuctionIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteResponse, DeleteExistingAuctionApiV1AuctionsAuctionIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/auctions/{auction_id}/'
    });
};

/**
 * Read Auction Fees
 */
export const readAuctionFeesApiV1AuctionFeesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadAuctionFeesApiV1AuctionFeesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadAuctionFeesApiV1AuctionFeesGetResponse, ReadAuctionFeesApiV1AuctionFeesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/auction-fees/'
    });
};

/**
 * Create New Auctionfee
 */
export const createNewAuctionfeeApiV1AuctionFeesPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewAuctionfeeApiV1AuctionFeesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewAuctionfeeApiV1AuctionFeesPostResponse, CreateNewAuctionfeeApiV1AuctionFeesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/auction-fees/'
    });
};

/**
 * Read Auctionfee
 */
export const readAuctionfeeApiV1AuctionFeesAuctionfeeIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetResponse, ReadAuctionfeeApiV1AuctionFeesAuctionfeeIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/auction-fees/{auctionfee_id}/'
    });
};

/**
 * Update Existing Auction
 */
export const updateExistingAuctionApiV1AuctionFeesAuctionfeeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutResponse, UpdateExistingAuctionApiV1AuctionFeesAuctionfeeIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/auction-fees/{auctionfee_id}/'
    });
};

/**
 * Delete Existing Auctionfee
 */
export const deleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteResponse, DeleteExistingAuctionfeeApiV1AuctionFeesAuctionfeeIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/auction-fees/{auctionfee_id}/'
    });
};

/**
 * Read Boat Types
 */
export const readBoatTypesApiV1BoatTypesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadBoatTypesApiV1BoatTypesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadBoatTypesApiV1BoatTypesGetResponse, ReadBoatTypesApiV1BoatTypesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/boat-types/'
    });
};

/**
 * Create Boat Type
 */
export const createBoatTypeApiV1BoatTypesPost = <ThrowOnError extends boolean = false>(options: Options<CreateBoatTypeApiV1BoatTypesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateBoatTypeApiV1BoatTypesPostResponse, CreateBoatTypeApiV1BoatTypesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/boat-types/'
    });
};

/**
 * Read Boat Type
 */
export const readBoatTypeApiV1BoatTypesBodyTypeIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadBoatTypeApiV1BoatTypesBodyTypeIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadBoatTypeApiV1BoatTypesBodyTypeIdGetResponse, ReadBoatTypeApiV1BoatTypesBodyTypeIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/boat-types/{body_type_id}'
    });
};

/**
 * Update Boat Type
 */
export const updateBoatTypeApiV1BoatTypesBodyTypeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutResponse, UpdateBoatTypeApiV1BoatTypesBodyTypeIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/boat-types/{body_type_id}/'
    });
};

/**
 * Delete Boat Type
 */
export const deleteBoatTypeApiV1BoatTypesBodyTypeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteResponse, DeleteBoatTypeApiV1BoatTypesBodyTypeIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/boat-types/{body_type_id}/'
    });
};

/**
 * Read Body Types
 */
export const readBodyTypesApiV1BodyTypesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadBodyTypesApiV1BodyTypesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadBodyTypesApiV1BodyTypesGetResponse, ReadBodyTypesApiV1BodyTypesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/body-types/'
    });
};

/**
 * Create Body Type
 */
export const createBodyTypeApiV1BodyTypesPost = <ThrowOnError extends boolean = false>(options: Options<CreateBodyTypeApiV1BodyTypesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateBodyTypeApiV1BodyTypesPostResponse, CreateBodyTypeApiV1BodyTypesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/body-types/'
    });
};

/**
 * Read Body Type
 */
export const readBodyTypeApiV1BodyTypesBodyTypeIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadBodyTypeApiV1BodyTypesBodyTypeIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadBodyTypeApiV1BodyTypesBodyTypeIdGetResponse, ReadBodyTypeApiV1BodyTypesBodyTypeIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/body-types/{body_type_id}'
    });
};

/**
 * Update Body Type
 */
export const updateBodyTypeApiV1BodyTypesBodyTypeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutResponse, UpdateBodyTypeApiV1BodyTypesBodyTypeIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/body-types/{body_type_id}/'
    });
};

/**
 * Delete Body Type
 */
export const deleteBodyTypeApiV1BodyTypesBodyTypeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteResponse, DeleteBodyTypeApiV1BodyTypesBodyTypeIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/body-types/{body_type_id}/'
    });
};

/**
 * Read Car Brands
 */
export const readCarBrandsApiV1CarBrandsGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCarBrandsApiV1CarBrandsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCarBrandsApiV1CarBrandsGetResponse, ReadCarBrandsApiV1CarBrandsGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-brands/'
    });
};

/**
 * Create New Car Brand
 */
export const createNewCarBrandApiV1CarBrandsPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewCarBrandApiV1CarBrandsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewCarBrandApiV1CarBrandsPostResponse, CreateNewCarBrandApiV1CarBrandsPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-brands/'
    });
};

/**
 * Read Car Brand
 */
export const readCarBrandApiV1CarBrandsCarBrandIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCarBrandApiV1CarBrandsCarBrandIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCarBrandApiV1CarBrandsCarBrandIdGetResponse, ReadCarBrandApiV1CarBrandsCarBrandIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-brands/{car_brand_id}/'
    });
};

/**
 * Update Existing Car Brand
 */
export const updateExistingCarBrandApiV1CarBrandsCarBrandIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutResponse, UpdateExistingCarBrandApiV1CarBrandsCarBrandIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-brands/{car_brand_id}/'
    });
};

/**
 * Delete Existing Car Brand
 */
export const deleteExistingCarBrandApiV1CarBrandsCarBrandIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteResponse, DeleteExistingCarBrandApiV1CarBrandsCarBrandIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-brands/{car_brand_id}/'
    });
};

/**
 * Read Car Models
 */
export const readCarModelsApiV1CarModelsGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCarModelsApiV1CarModelsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCarModelsApiV1CarModelsGetResponse, ReadCarModelsApiV1CarModelsGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-models/'
    });
};

/**
 * Create New Car Model
 */
export const createNewCarModelApiV1CarModelsPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewCarModelApiV1CarModelsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewCarModelApiV1CarModelsPostResponse, CreateNewCarModelApiV1CarModelsPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-models/'
    });
};

/**
 * Read Car Model
 */
export const readCarModelApiV1CarModelsCarModelIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCarModelApiV1CarModelsCarModelIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCarModelApiV1CarModelsCarModelIdGetResponse, ReadCarModelApiV1CarModelsCarModelIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-models/{car_model_id}/'
    });
};

/**
 * Update Existing Car Model
 */
export const updateExistingCarModelApiV1CarModelsCarModelIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCarModelApiV1CarModelsCarModelIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCarModelApiV1CarModelsCarModelIdPutResponse, UpdateExistingCarModelApiV1CarModelsCarModelIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-models/{car_model_id}/'
    });
};

/**
 * Delete Existing Car Model
 */
export const deleteExistingCarModelApiV1CarModelsCarModelIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteResponse, DeleteExistingCarModelApiV1CarModelsCarModelIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/car-models/{car_model_id}/'
    });
};

/**
 * Read Engine Volumes
 */
export const readEngineVolumesApiV1EngineVolumesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadEngineVolumesApiV1EngineVolumesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadEngineVolumesApiV1EngineVolumesGetResponse, ReadEngineVolumesApiV1EngineVolumesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/engine-volumes/'
    });
};

/**
 * Create New Engine Volume
 */
export const createNewEngineVolumeApiV1EngineVolumesPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewEngineVolumeApiV1EngineVolumesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewEngineVolumeApiV1EngineVolumesPostResponse, CreateNewEngineVolumeApiV1EngineVolumesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/engine-volumes/'
    });
};

/**
 * Read Engine Volume
 */
export const readEngineVolumeApiV1EngineVolumesEngineVolumeIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetResponse, ReadEngineVolumeApiV1EngineVolumesEngineVolumeIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/engine-volumes/{engine_volume_id}/'
    });
};

/**
 * Update Existing Engine Volume
 */
export const updateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutResponse, UpdateExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/engine-volumes/{engine_volume_id}/'
    });
};

/**
 * Delete Existing Engine Volume
 */
export const deleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteResponse, DeleteExistingEngineVolumeApiV1EngineVolumesEngineVolumeIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/engine-volumes/{engine_volume_id}/'
    });
};

/**
 * Read Fuel Types
 */
export const readFuelTypesApiV1FuelTypesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadFuelTypesApiV1FuelTypesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadFuelTypesApiV1FuelTypesGetResponse, ReadFuelTypesApiV1FuelTypesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/fuel-types/'
    });
};

/**
 * Create Fuel Type
 */
export const createFuelTypeApiV1FuelTypesPost = <ThrowOnError extends boolean = false>(options: Options<CreateFuelTypeApiV1FuelTypesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateFuelTypeApiV1FuelTypesPostResponse, CreateFuelTypeApiV1FuelTypesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/fuel-types/'
    });
};

/**
 * Read Fuel Type
 */
export const readFuelTypeApiV1FuelTypesFuelTypeIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadFuelTypeApiV1FuelTypesFuelTypeIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadFuelTypeApiV1FuelTypesFuelTypeIdGetResponse, ReadFuelTypeApiV1FuelTypesFuelTypeIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/fuel-types/{fuel_type_id}'
    });
};

/**
 * Update Fuel Type
 */
export const updateFuelTypeApiV1FuelTypesFuelTypeIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutResponse, UpdateFuelTypeApiV1FuelTypesFuelTypeIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/fuel-types/{fuel_type_id}/'
    });
};

/**
 * Delete Fuel Type
 */
export const deleteFuelTypeApiV1FuelTypesFuelTypeIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteResponse, DeleteFuelTypeApiV1FuelTypesFuelTypeIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/fuel-types/{fuel_type_id}/'
    });
};

/**
 * Read Transmissions
 */
export const readTransmissionsApiV1TransmissionsTransmissionsGet = <ThrowOnError extends boolean = false>(options?: Options<ReadTransmissionsApiV1TransmissionsTransmissionsGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadTransmissionsApiV1TransmissionsTransmissionsGetResponse, ReadTransmissionsApiV1TransmissionsTransmissionsGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/transmissions/transmissions/'
    });
};

/**
 * Read Transmission
 */
export const readTransmissionApiV1TransmissionsTransmissionsTransmissionIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetResponse, ReadTransmissionApiV1TransmissionsTransmissionsTransmissionIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/transmissions/transmissions/{transmission_id}'
    });
};

/**
 * Create Transmission
 */
export const createTransmissionApiV1TransmissionsPost = <ThrowOnError extends boolean = false>(options: Options<CreateTransmissionApiV1TransmissionsPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateTransmissionApiV1TransmissionsPostResponse, CreateTransmissionApiV1TransmissionsPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/transmissions/'
    });
};

/**
 * Update Transmission
 */
export const updateTransmissionApiV1TransmissionsTransmissionIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateTransmissionApiV1TransmissionsTransmissionIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateTransmissionApiV1TransmissionsTransmissionIdPutResponse, UpdateTransmissionApiV1TransmissionsTransmissionIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/transmissions/{transmission_id}/'
    });
};

/**
 * Delete Transmission
 */
export const deleteTransmissionApiV1TransmissionsTransmissionIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteResponse, DeleteTransmissionApiV1TransmissionsTransmissionIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/transmissions/{transmission_id}/'
    });
};

/**
 * Read Cities
 */
export const readCitiesApiV1CitiesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCitiesApiV1CitiesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCitiesApiV1CitiesGetResponse, ReadCitiesApiV1CitiesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cities/'
    });
};

/**
 * Create City
 */
export const createCityApiV1CitiesPost = <ThrowOnError extends boolean = false>(options: Options<CreateCityApiV1CitiesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateCityApiV1CitiesPostResponse, CreateCityApiV1CitiesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/cities/'
    });
};

/**
 * Read City
 */
export const readCityApiV1CitiesCityIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCityApiV1CitiesCityIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCityApiV1CitiesCityIdGetResponse, ReadCityApiV1CitiesCityIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cities/{city_id}'
    });
};

/**
 * Update City
 */
export const updateCityApiV1CitiesCityIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateCityApiV1CitiesCityIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateCityApiV1CitiesCityIdPutResponse, UpdateCityApiV1CitiesCityIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cities/{city_id}/'
    });
};

/**
 * Delete City
 */
export const deleteCityApiV1CitiesCityIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteCityApiV1CitiesCityIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteCityApiV1CitiesCityIdDeleteResponse, DeleteCityApiV1CitiesCityIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/cities/{city_id}/'
    });
};

/**
 * Read Countries
 */
export const readCountriesApiV1CountriesGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCountriesApiV1CountriesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCountriesApiV1CountriesGetResponse, ReadCountriesApiV1CountriesGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/countries/'
    });
};

/**
 * Create Country
 */
export const createCountryApiV1CountriesPost = <ThrowOnError extends boolean = false>(options: Options<CreateCountryApiV1CountriesPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateCountryApiV1CountriesPostResponse, CreateCountryApiV1CountriesPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/countries/'
    });
};

/**
 * Read Country
 */
export const readCountryApiV1CountriesCountryIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCountryApiV1CountriesCountryIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCountryApiV1CountriesCountryIdGetResponse, ReadCountryApiV1CountriesCountryIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/countries/{country_id}'
    });
};

/**
 * Update Country
 */
export const updateCountryApiV1CountriesCountryIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateCountryApiV1CountriesCountryIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateCountryApiV1CountriesCountryIdPutResponse, UpdateCountryApiV1CountriesCountryIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/countries/{country_id}/'
    });
};

/**
 * Delete Country
 */
export const deleteCountryApiV1CountriesCountryIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteCountryApiV1CountriesCountryIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteCountryApiV1CountriesCountryIdDeleteResponse, DeleteCountryApiV1CountriesCountryIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/countries/{country_id}/'
    });
};

/**
 * Read Locations From
 */
export const readLocationsFromApiV1LocationFromGet = <ThrowOnError extends boolean = false>(options?: Options<ReadLocationsFromApiV1LocationFromGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadLocationsFromApiV1LocationFromGetResponse, ReadLocationsFromApiV1LocationFromGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/location-from/'
    });
};

/**
 * Create Location From
 */
export const createLocationFromApiV1LocationFromPost = <ThrowOnError extends boolean = false>(options: Options<CreateLocationFromApiV1LocationFromPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateLocationFromApiV1LocationFromPostResponse, CreateLocationFromApiV1LocationFromPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/location-from/'
    });
};

/**
 * Read Location From
 */
export const readLocationFromApiV1LocationFromLocationFromIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadLocationFromApiV1LocationFromLocationFromIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadLocationFromApiV1LocationFromLocationFromIdGetResponse, ReadLocationFromApiV1LocationFromLocationFromIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/location-from/{location_from_id}'
    });
};

/**
 * Update Location From
 */
export const updateLocationFromApiV1LocationFromLocationFromIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateLocationFromApiV1LocationFromLocationFromIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateLocationFromApiV1LocationFromLocationFromIdPutResponse, UpdateLocationFromApiV1LocationFromLocationFromIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/location-from/{location_from_id}/'
    });
};

/**
 * Delete Location From
 */
export const deleteLocationFromApiV1LocationFromLocationFromIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteLocationFromApiV1LocationFromLocationFromIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteLocationFromApiV1LocationFromLocationFromIdDeleteResponse, DeleteLocationFromApiV1LocationFromLocationFromIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/location-from/{location_from_id}/'
    });
};

/**
 * Read Ports From
 */
export const readPortsFromApiV1PortFromGet = <ThrowOnError extends boolean = false>(options?: Options<ReadPortsFromApiV1PortFromGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadPortsFromApiV1PortFromGetResponse, ReadPortsFromApiV1PortFromGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-from/'
    });
};

/**
 * Create New Port From
 */
export const createNewPortFromApiV1PortFromPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewPortFromApiV1PortFromPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewPortFromApiV1PortFromPostResponse, CreateNewPortFromApiV1PortFromPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-from/'
    });
};

/**
 * Read Port From
 */
export const readPortFromApiV1PortFromPortFromIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadPortFromApiV1PortFromPortFromIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadPortFromApiV1PortFromPortFromIdGetResponse, ReadPortFromApiV1PortFromPortFromIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-from/{port_from_id}/'
    });
};

/**
 * Update Existing Port From
 */
export const updateExistingPortFromApiV1PortFromPortFromIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingPortFromApiV1PortFromPortFromIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingPortFromApiV1PortFromPortFromIdPutResponse, UpdateExistingPortFromApiV1PortFromPortFromIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-from/{port_from_id}/'
    });
};

/**
 * Delete Existing Port From
 */
export const deleteExistingPortFromApiV1PortFromPortFromIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingPortFromApiV1PortFromPortFromIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingPortFromApiV1PortFromPortFromIdDeleteResponse, DeleteExistingPortFromApiV1PortFromPortFromIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-from/{port_from_id}/'
    });
};

/**
 * Read Ports To
 */
export const readPortsToApiV1PortToGet = <ThrowOnError extends boolean = false>(options?: Options<ReadPortsToApiV1PortToGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadPortsToApiV1PortToGetResponse, ReadPortsToApiV1PortToGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-to/'
    });
};

/**
 * Create Port To
 */
export const createPortToApiV1PortToPost = <ThrowOnError extends boolean = false>(options: Options<CreatePortToApiV1PortToPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreatePortToApiV1PortToPostResponse, CreatePortToApiV1PortToPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-to/'
    });
};

/**
 * Read Port To
 */
export const readPortToApiV1PortToPortToIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadPortToApiV1PortToPortToIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadPortToApiV1PortToPortToIdGetResponse, ReadPortToApiV1PortToPortToIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-to/{port_to_id}'
    });
};

/**
 * Update Port To
 */
export const updatePortToApiV1PortToPortToIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdatePortToApiV1PortToPortToIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdatePortToApiV1PortToPortToIdPutResponse, UpdatePortToApiV1PortToPortToIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-to/{port_to_id}/'
    });
};

/**
 * Delete Port To
 */
export const deletePortToApiV1PortToPortToIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeletePortToApiV1PortToPortToIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeletePortToApiV1PortToPortToIdDeleteResponse, DeletePortToApiV1PortToPortToIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/port-to/{port_to_id}/'
    });
};

/**
 * Read Overland Tariffs
 */
export const readOverlandTariffsApiV1OverlandTariffGet = <ThrowOnError extends boolean = false>(options?: Options<ReadOverlandTariffsApiV1OverlandTariffGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadOverlandTariffsApiV1OverlandTariffGetResponse, ReadOverlandTariffsApiV1OverlandTariffGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/overland-tariff/'
    });
};

/**
 * Create New Overland Tariff
 */
export const createNewOverlandTariffApiV1OverlandTariffPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewOverlandTariffApiV1OverlandTariffPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewOverlandTariffApiV1OverlandTariffPostResponse, CreateNewOverlandTariffApiV1OverlandTariffPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/overland-tariff/'
    });
};

/**
 * Read Overland Tariff
 */
export const readOverlandTariffApiV1OverlandTariffOverlandTariffIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetResponse, ReadOverlandTariffApiV1OverlandTariffOverlandTariffIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/overland-tariff/{overland_tariff_id}/'
    });
};

/**
 * Update Existing Overland Tariff
 */
export const updateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutResponse, UpdateExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/overland-tariff/{overland_tariff_id}/'
    });
};

/**
 * Delete Existing Overland Tariff
 */
export const deleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteResponse, DeleteExistingOverlandTariffApiV1OverlandTariffOverlandTariffIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/overland-tariff/{overland_tariff_id}/'
    });
};

/**
 * Read Oversea Tariffs
 */
export const readOverseaTariffsApiV1OverseaTariffGet = <ThrowOnError extends boolean = false>(options?: Options<ReadOverseaTariffsApiV1OverseaTariffGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadOverseaTariffsApiV1OverseaTariffGetResponse, ReadOverseaTariffsApiV1OverseaTariffGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/oversea-tariff/'
    });
};

/**
 * Create New Oversea Tariff
 */
export const createNewOverseaTariffApiV1OverseaTariffPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewOverseaTariffApiV1OverseaTariffPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewOverseaTariffApiV1OverseaTariffPostResponse, CreateNewOverseaTariffApiV1OverseaTariffPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/oversea-tariff/'
    });
};

/**
 * Read Oversea Tariff
 */
export const readOverseaTariffApiV1OverseaTariffOverseaTariffIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetResponse, ReadOverseaTariffApiV1OverseaTariffOverseaTariffIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/oversea-tariff/{oversea_tariff_id}/'
    });
};

/**
 * Update Existing Oversea Tariff
 */
export const updateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutResponse, UpdateExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/oversea-tariff/{oversea_tariff_id}/'
    });
};

/**
 * Delete Existing Oversea Tariff
 */
export const deleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteResponse, DeleteExistingOverseaTariffApiV1OverseaTariffOverseaTariffIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/oversea-tariff/{oversea_tariff_id}/'
    });
};

/**
 * Get Delivery Tariffs
 */
export const getDeliveryTariffsApiV1CalculateTariffDeliveryGet = <ThrowOnError extends boolean = false>(options: Options<GetDeliveryTariffsApiV1CalculateTariffDeliveryGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetDeliveryTariffsApiV1CalculateTariffDeliveryGetResponse, GetDeliveryTariffsApiV1CalculateTariffDeliveryGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/calculate-tariff/delivery/'
    });
};

/**
 * Get Total Tariffs
 */
export const getTotalTariffsApiV1CalculateTariffTotalGet = <ThrowOnError extends boolean = false>(options: Options<GetTotalTariffsApiV1CalculateTariffTotalGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetTotalTariffsApiV1CalculateTariffTotalGetResponse, GetTotalTariffsApiV1CalculateTariffTotalGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/calculate-tariff/total/'
    });
};

/**
 * Read Containers
 */
export const readContainersApiV1ContainerGet = <ThrowOnError extends boolean = false>(options?: Options<ReadContainersApiV1ContainerGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadContainersApiV1ContainerGetResponse, ReadContainersApiV1ContainerGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/container/'
    });
};

/**
 * Create New Container
 */
export const createNewContainerApiV1ContainerPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewContainerApiV1ContainerPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewContainerApiV1ContainerPostResponse, CreateNewContainerApiV1ContainerPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/container/'
    });
};

/**
 * Read Container
 */
export const readContainerApiV1ContainerContainerIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadContainerApiV1ContainerContainerIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadContainerApiV1ContainerContainerIdGetResponse, ReadContainerApiV1ContainerContainerIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/container/{container_id}/'
    });
};

/**
 * Update Existing Container
 */
export const updateExistingContainerApiV1ContainerContainerIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingContainerApiV1ContainerContainerIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingContainerApiV1ContainerContainerIdPutResponse, UpdateExistingContainerApiV1ContainerContainerIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/container/{container_id}/'
    });
};

/**
 * Delete Existing Container
 */
export const deleteExistingContainerApiV1ContainerContainerIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingContainerApiV1ContainerContainerIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingContainerApiV1ContainerContainerIdDeleteResponse, DeleteExistingContainerApiV1ContainerContainerIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/container/{container_id}/'
    });
};

/**
 * Read Cargo By Vin
 */
export const readCargoByVinApiV1CargoGeneralVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinApiV1CargoGeneralVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinApiV1CargoGeneralVinCargoVinGetResponse, ReadCargoByVinApiV1CargoGeneralVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/general/vin/{cargo_vin}/'
    });
};

/**
 * Read Cargos Admin
 */
export const readCargosAdminApiV1CargoAdminGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosAdminApiV1CargoAdminGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosAdminApiV1CargoAdminGetResponse, ReadCargosAdminApiV1CargoAdminGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/admin/'
    });
};

/**
 * Create New Cargo Admin
 */
export const createNewCargoAdminApiV1CargoAdminPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewCargoAdminApiV1CargoAdminPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewCargoAdminApiV1CargoAdminPostResponse, CreateNewCargoAdminApiV1CargoAdminPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/admin/'
    });
};

/**
 * Read Cargo Admin
 */
export const readCargoAdminApiV1CargoAdminCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoAdminApiV1CargoAdminCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoAdminApiV1CargoAdminCargoIdGetResponse, ReadCargoAdminApiV1CargoAdminCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/admin/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Admin
 */
export const updateExistingCargoAdminApiV1CargoAdminCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutResponse, UpdateExistingCargoAdminApiV1CargoAdminCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/admin/{cargo_id}/'
    });
};

/**
 * Delete Existing Cargo Admin
 */
export const deleteExistingCargoAdminApiV1CargoAdminCargoIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteResponse, DeleteExistingCargoAdminApiV1CargoAdminCargoIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/admin/{cargo_id}/'
    });
};

/**
 * Read Cargos Manager
 */
export const readCargosManagerApiV1CargoManagerGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosManagerApiV1CargoManagerGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosManagerApiV1CargoManagerGetResponse, ReadCargosManagerApiV1CargoManagerGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/'
    });
};

/**
 * Create New Cargo Manager
 */
export const createNewCargoManagerApiV1CargoManagerPost = <ThrowOnError extends boolean = false>(options: Options<CreateNewCargoManagerApiV1CargoManagerPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNewCargoManagerApiV1CargoManagerPostResponse, CreateNewCargoManagerApiV1CargoManagerPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/'
    });
};

/**
 * Read Cargo Manager
 */
export const readCargoManagerApiV1CargoManagerCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoManagerApiV1CargoManagerCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoManagerApiV1CargoManagerCargoIdGetResponse, ReadCargoManagerApiV1CargoManagerCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Manager
 */
export const updateExistingCargoManagerApiV1CargoManagerCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutResponse, UpdateExistingCargoManagerApiV1CargoManagerCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/{cargo_id}/'
    });
};

/**
 * Delete Existing Cargo Manager
 */
export const deleteExistingCargoManagerApiV1CargoManagerCargoIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteResponse, DeleteExistingCargoManagerApiV1CargoManagerCargoIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/{cargo_id}/'
    });
};

/**
 * Read Cargo By Vin Manager
 */
export const readCargoByVinManagerApiV1CargoManagerVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetResponse, ReadCargoByVinManagerApiV1CargoManagerVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/manager/vin/{cargo_vin}/'
    });
};

/**
 * Read Cargos Logist
 */
export const readCargosLogistApiV1CargoLogisticianGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosLogistApiV1CargoLogisticianGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosLogistApiV1CargoLogisticianGetResponse, ReadCargosLogistApiV1CargoLogisticianGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/logistician/'
    });
};

/**
 * Read Cargo By Vin Logist
 */
export const readCargoByVinLogistApiV1CargoLogisticianVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetResponse, ReadCargoByVinLogistApiV1CargoLogisticianVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/logistician/vin/{cargo_vin}/'
    });
};

/**
 * Update Existing Cargo Logist
 */
export const updateExistingCargoLogistApiV1CargoLogisticianCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutResponse, UpdateExistingCargoLogistApiV1CargoLogisticianCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/logistician/{cargo_id}/'
    });
};

/**
 * Read Cargos Accountant
 */
export const readCargosAccountantApiV1CargoAccountantGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosAccountantApiV1CargoAccountantGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosAccountantApiV1CargoAccountantGetResponse, ReadCargosAccountantApiV1CargoAccountantGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/accountant/'
    });
};

/**
 * Read Cargo Accountant
 */
export const readCargoAccountantApiV1CargoAccountantCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoAccountantApiV1CargoAccountantCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoAccountantApiV1CargoAccountantCargoIdGetResponse, ReadCargoAccountantApiV1CargoAccountantCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/accountant/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Accountant
 */
export const updateExistingCargoAccountantApiV1CargoAccountantCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutResponse, UpdateExistingCargoAccountantApiV1CargoAccountantCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/accountant/{cargo_id}/'
    });
};

/**
 * Read Cargo By Vin Accountant
 */
export const readCargoByVinAccountantApiV1CargoAccountantVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetResponse, ReadCargoByVinAccountantApiV1CargoAccountantVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/accountant/vin/{cargo_vin}/'
    });
};

/**
 * Read Cargos Broker
 */
export const readCargosBrokerApiV1CargoBrokerGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosBrokerApiV1CargoBrokerGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosBrokerApiV1CargoBrokerGetResponse, ReadCargosBrokerApiV1CargoBrokerGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/broker/'
    });
};

/**
 * Read Cargo Broker
 */
export const readCargoBrokerApiV1CargoBrokerCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoBrokerApiV1CargoBrokerCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoBrokerApiV1CargoBrokerCargoIdGetResponse, ReadCargoBrokerApiV1CargoBrokerCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/broker/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Broker
 */
export const updateExistingCargoBrokerApiV1CargoBrokerCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutResponse, UpdateExistingCargoBrokerApiV1CargoBrokerCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/broker/{cargo_id}/'
    });
};

/**
 * Read Cargo By Vin Broker
 */
export const readCargoByVinBrokerApiV1CargoBrokerVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetResponse, ReadCargoByVinBrokerApiV1CargoBrokerVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/broker/vin/{cargo_vin}/'
    });
};

/**
 * Read Cargos Dealer
 */
export const readCargosDealerApiV1CargoDealerGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosDealerApiV1CargoDealerGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosDealerApiV1CargoDealerGetResponse, ReadCargosDealerApiV1CargoDealerGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/dealer/'
    });
};

/**
 * Read Cargo Dealer
 */
export const readCargoDealerApiV1CargoDealerCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoDealerApiV1CargoDealerCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoDealerApiV1CargoDealerCargoIdGetResponse, ReadCargoDealerApiV1CargoDealerCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/dealer/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Dealer
 */
export const updateExistingCargoDealerApiV1CargoDealerCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutResponse, UpdateExistingCargoDealerApiV1CargoDealerCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/dealer/{cargo_id}/'
    });
};

/**
 * Read Cargo By Vin Dealer
 */
export const readCargoByVinDealerApiV1CargoDealerVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetResponse, ReadCargoByVinDealerApiV1CargoDealerVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/dealer/vin/{cargo_vin}/'
    });
};

/**
 * Update Existing Cargo Logist
 */
export const updateExistingCargoLogistApiV1CargoRobotSetIsPhotoPost = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostResponse, UpdateExistingCargoLogistApiV1CargoRobotSetIsPhotoPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/robot/set-is-photo/'
    });
};

/**
 * Update Existing Cargo Robot
 */
export const updateExistingCargoRobotApiV1CargoRobotChangeCargoPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutResponse, UpdateExistingCargoRobotApiV1CargoRobotChangeCargoPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/robot/change-cargo/'
    });
};

/**
 * Update Existing Cargo Robot
 */
export const updateExistingCargoRobotApiV1CargoRobotHasFileAccessPost = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostResponse, UpdateExistingCargoRobotApiV1CargoRobotHasFileAccessPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/robot/has-file-access/'
    });
};

/**
 * Update Existing Cargo Robot
 */
export const updateExistingCargoRobotApiV1CargoRobotCargoCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetResponse, UpdateExistingCargoRobotApiV1CargoRobotCargoCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/robot/cargo/{cargo_id}/'
    });
};

/**
 * Send Notificaiton
 */
export const sendNotificaitonApiV1CargoRobotNotificationGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<SendNotificaitonApiV1CargoRobotNotificationGetResponse, SendNotificaitonApiV1CargoRobotNotificationGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/robot/notification/'
    });
};

/**
 * Read Cargos Expeditor
 */
export const readCargosExpeditorApiV1CargoExpeditorGet = <ThrowOnError extends boolean = false>(options?: Options<ReadCargosExpeditorApiV1CargoExpeditorGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargosExpeditorApiV1CargoExpeditorGetResponse, ReadCargosExpeditorApiV1CargoExpeditorGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/expeditor/'
    });
};

/**
 * Read Cargo Expeditor
 */
export const readCargoExpeditorApiV1CargoExpeditorCargoIdGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetResponse, ReadCargoExpeditorApiV1CargoExpeditorCargoIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/expeditor/{cargo_id}/'
    });
};

/**
 * Update Existing Cargo Expeditor
 */
export const updateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPut = <ThrowOnError extends boolean = false>(options: Options<UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutData, ThrowOnError>) => {
    return (options?.client ?? client).put<UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutResponse, UpdateExistingCargoExpeditorApiV1CargoExpeditorCargoIdPutError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/expeditor/{cargo_id}/'
    });
};

/**
 * Read Cargo By Vin Expeditor
 */
export const readCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGet = <ThrowOnError extends boolean = false>(options: Options<ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetResponse, ReadCargoByVinExpeditorApiV1CargoExpeditorVinCargoVinGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/cargo/expeditor/vin/{cargo_vin}/'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};