// This file is auto-generated by @hey-api/openapi-ts

export const AdminUserInfoSchema = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        phone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone Number'
        },
        email_verified: {
            type: 'boolean',
            title: 'Email Verified'
        },
        phone: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone'
        },
        role: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/UserRole'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['id', 'email_verified'],
    title: 'AdminUserInfo'
} as const;

export const AdminUserUpdateSchema = {
    properties: {
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        phone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone Number'
        },
        role: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/UserRole'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    title: 'AdminUserUpdate'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const PaginationSchema_AdminUserInfo_Schema = {
    properties: {
        total: {
            type: 'integer',
            title: 'Total'
        },
        page: {
            type: 'integer',
            title: 'Page'
        },
        total_pages: {
            type: 'integer',
            title: 'Total Pages'
        },
        items: {
            items: {
                '$ref': '#/components/schemas/AdminUserInfo'
            },
            type: 'array',
            title: 'Items'
        }
    },
    type: 'object',
    required: ['total', 'page', 'total_pages', 'items'],
    title: 'PaginationSchema[AdminUserInfo]'
} as const;

export const SignInUserInfoSchema = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        refresh_token: {
            type: 'string',
            title: 'Refresh Token'
        },
        id_token: {
            type: 'string',
            title: 'Id Token'
        },
        user_info: {
            '$ref': '#/components/schemas/UserInfo'
        }
    },
    type: 'object',
    required: ['access_token', 'refresh_token', 'id_token', 'user_info'],
    title: 'SignInUserInfo'
} as const;

export const UserInfoSchema = {
    properties: {
        id: {
            type: 'string',
            title: 'Id'
        },
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        phone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone Number'
        }
    },
    type: 'object',
    required: ['id'],
    title: 'UserInfo'
} as const;

export const UserRoleSchema = {
    type: 'string',
    enum: ['Admin', 'Manager', 'Accountant', 'Dealer', 'Logistician', 'Broker', 'Customer'],
    title: 'UserRole'
} as const;

export const UserSigninSchema = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            title: 'Password'
        }
    },
    type: 'object',
    required: ['email', 'password'],
    title: 'UserSignin'
} as const;

export const UserSignupSchema = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        }
    },
    type: 'object',
    required: ['email', 'password'],
    title: 'UserSignup'
} as const;

export const UserUpdateSchema = {
    properties: {
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        },
        phone_number: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Phone Number'
        }
    },
    type: 'object',
    title: 'UserUpdate'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;