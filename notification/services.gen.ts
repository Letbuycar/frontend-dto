// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { CreateNotificationApiV1NotificationPostData, CreateNotificationApiV1NotificationPostError, CreateNotificationApiV1NotificationPostResponse, GetNotificationsApiV1NotificationGetData, GetNotificationsApiV1NotificationGetError, GetNotificationsApiV1NotificationGetResponse, CreateNotificationByAccountantApiV1NotificationAccountantPostData, CreateNotificationByAccountantApiV1NotificationAccountantPostError, CreateNotificationByAccountantApiV1NotificationAccountantPostResponse, CreateNotificationByBrokerApiV1NotificationBrokerPostData, CreateNotificationByBrokerApiV1NotificationBrokerPostError, CreateNotificationByBrokerApiV1NotificationBrokerPostResponse, GetNotificationsApiV1NotificationNotificationIdGetData, GetNotificationsApiV1NotificationNotificationIdGetError, GetNotificationsApiV1NotificationNotificationIdGetResponse, DeleteNotificationApiV1NotificationNotificationIdDeleteData, DeleteNotificationApiV1NotificationNotificationIdDeleteError, DeleteNotificationApiV1NotificationNotificationIdDeleteResponse, GetNotificationsAllApiV1NotificationAllGetData, GetNotificationsAllApiV1NotificationAllGetError, GetNotificationsAllApiV1NotificationAllGetResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Create Notification
 */
export const createNotificationApiV1NotificationPost = <ThrowOnError extends boolean = false>(options: Options<CreateNotificationApiV1NotificationPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNotificationApiV1NotificationPostResponse, CreateNotificationApiV1NotificationPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/'
    });
};

/**
 * Get Notifications
 */
export const getNotificationsApiV1NotificationGet = <ThrowOnError extends boolean = false>(options?: Options<GetNotificationsApiV1NotificationGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetNotificationsApiV1NotificationGetResponse, GetNotificationsApiV1NotificationGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/'
    });
};

/**
 * Create Notification By Accountant
 */
export const createNotificationByAccountantApiV1NotificationAccountantPost = <ThrowOnError extends boolean = false>(options: Options<CreateNotificationByAccountantApiV1NotificationAccountantPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNotificationByAccountantApiV1NotificationAccountantPostResponse, CreateNotificationByAccountantApiV1NotificationAccountantPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/accountant/'
    });
};

/**
 * Create Notification By Broker
 */
export const createNotificationByBrokerApiV1NotificationBrokerPost = <ThrowOnError extends boolean = false>(options: Options<CreateNotificationByBrokerApiV1NotificationBrokerPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateNotificationByBrokerApiV1NotificationBrokerPostResponse, CreateNotificationByBrokerApiV1NotificationBrokerPostError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/broker/'
    });
};

/**
 * Get Notifications
 */
export const getNotificationsApiV1NotificationNotificationIdGet = <ThrowOnError extends boolean = false>(options: Options<GetNotificationsApiV1NotificationNotificationIdGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetNotificationsApiV1NotificationNotificationIdGetResponse, GetNotificationsApiV1NotificationNotificationIdGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/{notification_id}/'
    });
};

/**
 * Delete Notification
 */
export const deleteNotificationApiV1NotificationNotificationIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteNotificationApiV1NotificationNotificationIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteNotificationApiV1NotificationNotificationIdDeleteResponse, DeleteNotificationApiV1NotificationNotificationIdDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/{notification_id}/'
    });
};

/**
 * Get Notifications All
 */
export const getNotificationsAllApiV1NotificationAllGet = <ThrowOnError extends boolean = false>(options?: Options<GetNotificationsAllApiV1NotificationAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetNotificationsAllApiV1NotificationAllGetResponse, GetNotificationsAllApiV1NotificationAllGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/notification/all/'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};