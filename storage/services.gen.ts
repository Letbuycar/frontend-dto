// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-axios';
import type { UploadFileApiV1ImagesVinCodePostData, UploadFileApiV1ImagesVinCodePostError, UploadFileApiV1ImagesVinCodePostResponse, GetFilesApiV1ImagesVinCodeGetData, GetFilesApiV1ImagesVinCodeGetError, GetFilesApiV1ImagesVinCodeGetResponse, UploadMultipleFilesApiV1ImagesVinCodeMultiplePostData, UploadMultipleFilesApiV1ImagesVinCodeMultiplePostError, UploadMultipleFilesApiV1ImagesVinCodeMultiplePostResponse, GetFileApiV1ImagesVinCodeFilenameGetData, GetFileApiV1ImagesVinCodeFilenameGetError, GetFileApiV1ImagesVinCodeFilenameGetResponse, DeleteFileApiV1ImagesVinCodeFilenameDeleteData, DeleteFileApiV1ImagesVinCodeFilenameDeleteError, DeleteFileApiV1ImagesVinCodeFilenameDeleteResponse, UploadFileDutyApiV1DutiesCargoIdPostData, UploadFileDutyApiV1DutiesCargoIdPostError, UploadFileDutyApiV1DutiesCargoIdPostResponse, GetFileDutyApiV1DutiesCargoIdFilenameGetData, GetFileDutyApiV1DutiesCargoIdFilenameGetError, GetFileDutyApiV1DutiesCargoIdFilenameGetResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Upload File
 */
export const uploadFileApiV1ImagesVinCodePost = <ThrowOnError extends boolean = false>(options: Options<UploadFileApiV1ImagesVinCodePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UploadFileApiV1ImagesVinCodePostResponse, UploadFileApiV1ImagesVinCodePostError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/v1/images/{vin_code}/'
    });
};

/**
 * Get Files
 */
export const getFilesApiV1ImagesVinCodeGet = <ThrowOnError extends boolean = false>(options: Options<GetFilesApiV1ImagesVinCodeGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetFilesApiV1ImagesVinCodeGetResponse, GetFilesApiV1ImagesVinCodeGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/images/{vin_code}/'
    });
};

/**
 * Upload Multiple Files
 */
export const uploadMultipleFilesApiV1ImagesVinCodeMultiplePost = <ThrowOnError extends boolean = false>(options: Options<UploadMultipleFilesApiV1ImagesVinCodeMultiplePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UploadMultipleFilesApiV1ImagesVinCodeMultiplePostResponse, UploadMultipleFilesApiV1ImagesVinCodeMultiplePostError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/v1/images/{vin_code}/multiple/'
    });
};

/**
 * Get File
 */
export const getFileApiV1ImagesVinCodeFilenameGet = <ThrowOnError extends boolean = false>(options: Options<GetFileApiV1ImagesVinCodeFilenameGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetFileApiV1ImagesVinCodeFilenameGetResponse, GetFileApiV1ImagesVinCodeFilenameGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/images/{vin_code}/{filename}/'
    });
};

/**
 * Delete File
 */
export const deleteFileApiV1ImagesVinCodeFilenameDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteFileApiV1ImagesVinCodeFilenameDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteFileApiV1ImagesVinCodeFilenameDeleteResponse, DeleteFileApiV1ImagesVinCodeFilenameDeleteError, ThrowOnError>({
        ...options,
        url: '/api/v1/images/{vin_code}/{filename}/'
    });
};

/**
 * Upload File Duty
 */
export const uploadFileDutyApiV1DutiesCargoIdPost = <ThrowOnError extends boolean = false>(options: Options<UploadFileDutyApiV1DutiesCargoIdPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<UploadFileDutyApiV1DutiesCargoIdPostResponse, UploadFileDutyApiV1DutiesCargoIdPostError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/v1/duties/{cargo_id}/'
    });
};

/**
 * Get File Duty
 */
export const getFileDutyApiV1DutiesCargoIdFilenameGet = <ThrowOnError extends boolean = false>(options: Options<GetFileDutyApiV1DutiesCargoIdFilenameGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetFileDutyApiV1DutiesCargoIdFilenameGetResponse, GetFileDutyApiV1DutiesCargoIdFilenameGetError, ThrowOnError>({
        ...options,
        url: '/api/v1/duties/{cargo_id}/{filename}/'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};